# module: textfile.py
# Handle text files generated by
# alesis micron/ion program decoder/encoder.
import subprocess, sys

ion_decoder_path = 'alesis/ion_program_decoder.pl'

### Read sysex into settings
def import_file(file_name):
    if file_name.endswith('.syx'):
        cmd = [ion_decoder_path, '-b', file_name]
        result = subprocess.run(cmd)
        if result.returncode == 0:
            file_name = file_name[:-3]+'txt'
        else:
            # show program_decoder error
            sys.exit()
    elif not file_name.endswith('.txt'):
        print('File type must be .txt or .syx')
        sys.exit()

    txt_file = open(file_name)
    settings = {'file_name':file_name}
    print('### Loading settings from '+file_name)
    for line in txt_file:
        line = line.strip()
        if line:
            if not line.startswith('#'): # remove comments
                pair = line.split(':')
                name = pair[0].replace(' ','_')
                value = pair[1].strip()
                settings[name] = value
    txt_file.close()
    return settings

### Receive sysex and return settings
def receive_file(args):
    try:
        # check if port given
        args[2]
    except:
        print('Please specify a MIDI port (amidi -l).')
        sys.exit()
    else:
        # receive sysex with amidi
        midi_port = args[2]
        cache = './prog/received.syx'
        cmd = ['amidi', '-t', '3', '-p']
        cmd +=  [midi_port, '-r',cache]
        result = subprocess.run(cmd)
        if result.returncode == 0:
            settings = import_file(cache)
            return settings
        else:
            # show amidi error
            sys.exit()
